# This workflow will upload a Python Package using Twine when a release is created
# For more information see: https://help.github.com/en/actions/language-and-framework-guides/using-python-with-github-actions#publishing-to-package-registries

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Publish package release

on:
  workflow_dispatch:
    inputs:
      version-change:
        description: Version part
        required: true
        type: choice
        options:
          - patch
          - minor
      beta:
        description: Is beta version
        required: true
        type: boolean
        default: True

jobs:
  publish:
    env:
      VERSION_CHANGE: ${{ github.event.inputs.version-change }}
      WITH_BETA: ${{ github.event.inputs.beta }}

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
      with:
        token: ${{ secrets.YDB_PLATFORM_BOT_TOKEN_REPO }}

    - name: Set up Python
      uses: actions/setup-python@v3
      with:
        python-version: '3.8'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build

    - name: Increment version
      run: |
        echo $PWD
        ls -la 
        NEW_VERSION=$(python3 ./.github/scripts/increment_version.py --inc-type=$VERSION_CHANGE --with-beta=$WITH_BETA)
        git tag "$NEW_VERSION"
        git push && git push --tags        

    - name: Build package
      run: python -m build

#    - name: Publish package
#      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
#      with:
#        user: __token__
#        password: ${{ secrets.PYPI_API_TOKEN }}

    - name: Create release
      run: |      
          CHANGELOG="$CHANGELOG
          
          Full Changelog: [$LAST_TAG...$TAG](https://github.com/ydb-platform/ydb-go-sdk/compare/$LAST_TAG...$TAG)"
          if [ "$RELEASE_CANDIDATE" = true ]
          then
            gh release create -d $TAG -t "$TAG" --notes "$CHANGELOG"
          else
            gh release create $TAG -t "$TAG" --notes "$CHANGELOG"
          fi;
